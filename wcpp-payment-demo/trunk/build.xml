<project name="WebCrypto++ Payment Demo" default="help">

  <!-- set properties for this build -->
  <property name="application" value="WebCryptoPlusPlus.war"/>
  <property name="src_dir" value="src"/>
  <property name="packimage_dir" value="packaged-images"/>
  <property name="class_war_path" value="WEB-INF/classes/org/webpki/webapps/wcppdemo"/>
  
  <property name="keypassword" value="foo123"/>
  <property name="keyfilext" value=".jks"/>
  <property name="key_dir" location="keys"/>

  <property name="bankkey" value="mybank-eecert"/>
  <property name="paymentroot" value="payment-network-rootca"/>

  <property name="merchantkey" value="demomerchant-eecert"/>
  <property name="merchantroot" value="merchant-network-rootca"/>
  
  <property name="encryptionkey" value="mybank-encryption-key"/>
  <property name="clientroot" value="mybank-clientroot"/>
  <property name="clientkey" value="mybank-client-eecert"/>
  
  <property name="temp_dir" value=".tmp"/>
  <property name="dist_dir" value="dist"/>
  <property name="debug" value="on"/>
  <property environment="env"/>
  <property name="third_party_jars" location="../resources/third-party-jars"/>
  <property name="webpki_jars" location="../library/dist"/>
  <property name="catalina.home" value="${env.CATALINA_HOME}"/>

	<resources id="security_constraint">
<string><![CDATA[
    <security-constraint>
      <web-resource-collection>
        <web-resource-name>The app</web-resource-name>
        <url-pattern>/*</url-pattern>
      </web-resource-collection>
      <user-data-constraint>
        <transport-guarantee>CONFIDENTIAL</transport-guarantee>
      </user-data-constraint>
    </security-constraint>
]]></string>
    </resources>
    <!-- 
	<property name="mobilra-enroll-proxy-port" refid="mobilra-enroll-proxy-port-id"/>
	 -->

  <condition property="storetype" value="PKCS12" else="JKS">
    <matches pattern=".*\.p12$" string="${keyfilext}"/>
  </condition>

  <target name="help">
      <echo message="build nowebcrypto webcrypto mobilepki createcerts"/>
  </target>

  <target name="_init" unless="app_path">
    <!-- Set up where application should reside --> 
    <condition property="tomcat_app_root_set">
      <isset property="env.CATALINA_HOME"/>
    </condition>
    <fail message="CATALINA_HOME must be set to environment!" unless="tomcat_app_root_set"/>

    <!-- Set path to application.  -->
    <property name="app_path" value="${env.CATALINA_HOME}/webpki/${application}.war"/>
   </target>

  <target name="_build">
	  <path id="compile.classpath">
	    <fileset dir="${library.dir}">
	      <include name="*.jar"/>
	    </fileset>
	    <fileset dir="${third_party_jars}">
	      <include name="*.jar"/>
	    </fileset>
	  </path>
      <delete dir="${temp_dir}"/>
    <mkdir dir="${temp_dir}"/>
    <fixcrlf srcdir="${src_dir}"
       tab="remove"
       tablength="4"
       eol="lf"
       eof="remove"
       includes="**/*.java"/>
    <copy file="web.xml" todir="${temp_dir}"/>
    <javac debug="${debug}"
           source="${javaversion}"
           target="${javaversion}"
           srcdir="${src_dir}"
           destdir="${temp_dir}"
           classpathref="compile.classpath"
           includeAntRuntime="false"/>
	<replace file="${temp_dir}/web.xml">
	  <replacefilter token="@security-constraints@" value="${security.constraints}"/>
	  <replacefilter token="@bank-url@" value="${bank.url}"/>
	  <replacefilter token="@merchant-url@" value="${merchant.url}"/>
	  <replacefilter token="@card-font@" value="${card.font}"/>
	  <replacefilter token="@web-crypto@" value="${web.crypto}"/>
	  <replacefilter token="@key-password@" value="${keypassword}"/>
	  <replacefilter token="@bank-eecert@" value="${bankkey}${keyfilext}"/>
	  <replacefilter token="@merchant-eecert@" value="${merchantkey}${keyfilext}"/>
	  <replacefilter token="@payment-root@" value="${paymentroot}.cer"/>
	  <replacefilter token="@merchant-root@" value="${merchantroot}.cer"/>
	  <replacefilter token="@bank-encryptionkey@" value="${encryptionkey}.cer"/>
	  <replacefilter token="@bank-decryptionkey@" value="${encryptionkey}${keyfilext}"/>
	  <replacefilter token="@bank-client-root@" value="${clientroot}.cer"/>
	  <replacefilter token="@bank-client-eecert@" value="${clientkey}${keyfilext}"/>
	</replace>
    <war destfile="${dist_dir}/${application}" webxml="${temp_dir}/web.xml">
      <classes dir="${temp_dir}">
         <exclude name="web.xml"/>
      </classes>
      <lib file="${third_party_jars}/bcprov-*.jar"/>
      <lib dir="${library.dir}">
         <include name="webpki.org-libext*.jar"/>
         <include name="webpki.org-webutil*.jar"/>
      </lib>
      <fileset dir="web"/>
      <zipfileset dir="${key_dir}" prefix="${class_war_path}"/>
      <zipfileset dir="${packimage_dir}" prefix="${class_war_path}">
         <include name="**/*.png"/>
         <include name="**/*.gif"/>
      </zipfileset>
    </war>
  </target>

  <target name="nowebcrypto" depends="_init,build">
    <copy file="${dist_dir}/${application}" todir="${env.CATALINA_HOME}/webapps" overwrite="true" preservelastmodified="true"/>
  </target>

  <target name="webcrypto" depends="_init">
    <antcall target="_build">
       <param name="security.constraints" value=""/>
       <param name="bank.url" value="http://mybank.com:8080/WebCryptoPlusPlus"/>
       <param name="merchant.url" value="http://merchant.com:8080/WebCryptoPlusPlus/merchant"/>
       <param name="card.font" value="Arial Unicode MS"/>
       <param name="web.crypto" value="true"/>
       <param name="javaversion" value="1.7"/>
       <param name="library.dir" value="${webpki_jars}"/>
    </antcall>
    <copy file="${dist_dir}/${application}" todir="${env.CATALINA_HOME}/webapps" overwrite="true" preservelastmodified="true"/>
  </target>
  
  <!-- mobilepki -->
  <target name="mobilepki">
    <antcall target="_build">
       <param name="security.constraints" refid="security_constraint"/>
       <param name="bank.url" value="https://mobilepki.org/WebCryptoPlusPlus"/>
       <param name="merchant.url" value="https://openkeystore.googlecode.com/svn/wcpp-payment-demo/trunk/web/merchant.html"/>
       <param name="card.font" value="DejaVue"/>
       <param name="web.crypto" value="false"/>
       <param name="javaversion" value="1.6"/>
       <param name="library.dir" value="/mobile-phone-ra/enrollment-plugin/lib.common"/>
    </antcall>
  </target>
  	
  <target name="build">
    <antcall target="_build">
       <param name="security.constraints" value=""/>
       <param name="bank.url" value="http://mybank.com:8080/WebCryptoPlusPlus"/>
       <param name="merchant.url" value="http://merchant.com:8080/WebCryptoPlusPlus/merchant"/>
       <param name="card.font" value="Arial Unicode MS"/>
       <param name="web.crypto" value="false"/>
       <param name="javaversion" value="1.7"/>
       <param name="library.dir" value="${webpki_jars}"/>
    </antcall>
  </target>

  <target name="_createcert">
  	<java fork="yes"
  		  classname="org.webpki.ca.CommandLineCA"
  		  dir="${key_dir}"
		  failonerror="true">
  		<classpath>
  			 <fileset dir="${webpki_jars}">
  		        <include name="*.jar"/>
  			 </fileset>
  			 <fileset dir="${third_party_jars}">
  		        <include name="*.jar"/>
  			 </fileset>
  			 		</classpath>
  	    <arg line="${cmd} -out/keyalias mykey"/>
  	</java>
  </target>

  <target name="_getroot">
<!--
	  <echo message="-exportcert -keystore ${rootfile}${keyfilext} -alias mykey -storepass ${keypassword} -file ${rootfile}.cer"/>
  -->

	<exec executable="keytool" failonerror="true" dir="${key_dir}">
	  <arg line="-exportcert -keystore ${rootfile}${keyfilext} -alias mykey -storepass ${keypassword} -file ${rootfile}.cer"/>
	</exec>
  </target>
  
  <target name="_certpaymentnetwork">
    <antcall target="_createcert">
       <param name="cmd" value="-selfsigned -entity/ca -subject &quot;CN=Payment Network Root CA1, C=US&quot; -validity/start 2010-07-10T10:00:00 -validity/end 2030-07-10T09:59:59 -out/storetype ${storetype} -out/keystore ${paymentroot}${keyfilext} -out/storepass ${keypassword} -out/keypass ${keypassword} -keysize 4096 -sigalg RSA_SHA512 -serial 1"/>
    </antcall>
    <antcall target="_getroot">
       <param name="rootfile" value="${paymentroot}"/>
    </antcall>
    <antcall target="_createcert">
       <param name="cmd" value="-ca/keypass ${keypassword} -ca/storetype ${storetype} -ca/storepass ${keypassword} -ca/keystore payment-network-rootca${keyfilext} -entity/ca -subject &quot;CN=Payment Network Sub CA3, C=EU&quot; -validity/start 2012-07-10T10:00:00 -validity/end 2025-07-10T09:59:59 -out/storetype ${storetype} -out/keystore temp-subca${keyfilext} -out/storepass ${keypassword} -out/keypass ${keypassword} -keysize 2048 -sigalg RSA_SHA256 -serial 3"/>
    </antcall>
    <antcall target="_createcert">
       <param name="cmd" value=" -ca/addpath all -ca/keypass ${keypassword} -ca/storetype ${storetype} -ca/storepass ${keypassword} -ca/keystore temp-subca${keyfilext} -entity/ee -subject &quot;CN=mybank.com, serialNumber=4501, C=FR&quot; -validity/start 2014-01-01T00:00:00 -validity/end 2020-07-10T09:59:59 -out/storetype ${storetype} -out/keystore ${bankkey}${keyfilext} -out/storepass ${keypassword} -out/keypass ${keypassword}  -sigalg RSA_SHA256 -keysize 2048"/>
    </antcall>
  </target>

 <target name="_certmerchants">
    <antcall target="_createcert">
       <param name="cmd" value="-selfsigned -entity/ca -subject &quot;CN=Merchant Network Root CA1, C=US&quot; -validity/start 2010-07-10T10:00:00 -validity/end 2030-07-10T09:59:59 -out/storetype ${storetype} -out/keystore ${merchantroot}${keyfilext} -out/storepass ${keypassword} -out/keypass ${keypassword} -keysize 4096 -sigalg RSA_SHA512 -serial 1"/>
    </antcall>
    <antcall target="_getroot">
       <param name="rootfile" value="${merchantroot}"/>
    </antcall>
    <antcall target="_createcert">
       <param name="cmd" value="-ca/keypass ${keypassword} -ca/storetype ${storetype} -ca/storepass ${keypassword} -ca/keystore ${merchantroot}${keyfilext} -entity/ca -subject &quot;CN=Merchant Network Sub CA5, C=DE&quot; -validity/start 2012-07-10T10:00:00 -validity/end 2025-07-10T09:59:59 -out/storetype ${storetype} -out/keystore temp-subca${keyfilext} -out/storepass ${keypassword} -out/keypass ${keypassword} -keysize 2048 -sigalg RSA_SHA256 -serial 5"/>
    </antcall>
    <antcall target="_createcert">
       <param name="cmd" value=" -ca/addpath all -ca/keypass ${keypassword} -ca/storetype ${storetype} -ca/storepass ${keypassword} -ca/keystore temp-subca${keyfilext} -entity/ee -subject &quot;CN=Demo Merchant, serialNumber=896325, C=DE&quot; -validity/start 2014-01-01T00:00:00 -validity/end 2020-07-10T09:59:59 -out/storetype ${storetype} -out/keystore ${merchantkey}${keyfilext} -out/storepass ${keypassword} -out/keypass ${keypassword}  -sigalg RSA_SHA256 -keysize 2048"/>
    </antcall>
  </target>

  <target name="_clientcert">
    <antcall target="_createcert">
       <param name="cmd" value="-selfsigned -entity/ca -subject &quot;CN=Mybank Client Root CA1, C=US&quot; -validity/start 2010-07-10T10:00:00 -validity/end 2030-07-10T09:59:59 -out/storetype ${storetype} -out/keystore ${clientroot}${keyfilext} -out/storepass ${keypassword} -out/keypass ${keypassword} -keysize 4096 -sigalg RSA_SHA512 -serial 1"/>
    </antcall>
    <antcall target="_getroot">
       <param name="rootfile" value="${clientroot}"/>
    </antcall>
    <antcall target="_createcert">
       <param name="cmd" value="-ca/keypass ${keypassword} -ca/storetype ${storetype} -ca/storepass ${keypassword} -ca/keystore ${clientroot}${keyfilext} -entity/ee -subject &quot;CN=The Client, serialNumber=95673522&quot; -validity/start 2012-07-10T10:00:00 -validity/end 2025-07-10T09:59:59 -out/storetype ${storetype} -out/keystore ${clientkey}${keyfilext} -out/storepass ${keypassword} -out/keypass ${keypassword} -keysize 2048 -sigalg RSA_SHA256"/>
    </antcall>
    </target>

  <target name="_authencryption">
    <antcall target="_createcert">
       <param name="cmd" value="-selfsigned -entity/ee -subject &quot;CN=Mybank Encryption Key1&quot; -validity/start 2010-07-10T10:00:00 -validity/end 2030-07-10T09:59:59 -out/storetype ${storetype} -out/keystore ${encryptionkey}${keyfilext} -out/storepass ${keypassword} -out/keypass ${keypassword} -keysize 2048 -sigalg RSA_SHA256 -serial 1"/>
    </antcall>
    <antcall target="_getroot">
       <param name="rootfile" value="${encryptionkey}"/>
    </antcall>
  </target>
  
  <target name="createcerts">
    <antcall target="_certpaymentnetwork"/>
    <antcall target="_certmerchants"/>
    <antcall target="_clientcert"/>
    <antcall target="_authencryption"/>
    <delete>
  	  <fileset dir="${key_dir}">
  		<include name="temp*"/>
  	  </fileset>
    </delete>    
    </target>
  
</project>
