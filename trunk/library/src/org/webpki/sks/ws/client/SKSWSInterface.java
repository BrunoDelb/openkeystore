
package org.webpki.sks.ws.client;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Holder;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2-hudson-752-
 * Generated source version: 2.2
 * 
 */
@WebService(name = "SKSWSInterface", targetNamespace = "http://xmlns.webpki.org/sks/v0.61")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface SKSWSInterface {


    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getVersion", targetNamespace = "http://xmlns.webpki.org/sks/v0.61", className = "org.webpki.sks.ws.common.GetVersion")
    @ResponseWrapper(localName = "getVersionResponse", targetNamespace = "http://xmlns.webpki.org/sks/v0.61", className = "org.webpki.sks.ws.common.GetVersionResponse")
    public String getVersion();

    /**
     * 
     * @param keyHandle
     * @throws SKSException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "abortProvisioningSession", targetNamespace = "http://xmlns.webpki.org/sks/v0.61", className = "org.webpki.sks.ws.common.AbortProvisioningSession")
    @ResponseWrapper(localName = "abortProvisioningSessionResponse", targetNamespace = "http://xmlns.webpki.org/sks/v0.61", className = "org.webpki.sks.ws.common.AbortProvisioningSessionResponse")
    public void abortProvisioningSession(
        @WebParam(name = "keyHandle", targetNamespace = "")
        int keyHandle)
        throws SKSException_Exception
    ;

    /**
     * 
     * @param arg5
     * @param arg4
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     * @throws SKSException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "addExtension", targetNamespace = "http://xmlns.webpki.org/sks/v0.61", className = "org.webpki.sks.ws.common.AddExtension")
    @ResponseWrapper(localName = "addExtensionResponse", targetNamespace = "http://xmlns.webpki.org/sks/v0.61", className = "org.webpki.sks.ws.common.AddExtensionResponse")
    public void addExtension(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        byte arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        byte[] arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        byte[] arg4,
        @WebParam(name = "arg5", targetNamespace = "")
        byte[] arg5)
        throws SKSException_Exception
    ;

    /**
     * 
     * @param arg4
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns byte[]
     * @throws SKSException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "asymmetricKeyDecrypt", targetNamespace = "http://xmlns.webpki.org/sks/v0.61", className = "org.webpki.sks.ws.common.AsymmetricKeyDecrypt")
    @ResponseWrapper(localName = "asymmetricKeyDecryptResponse", targetNamespace = "http://xmlns.webpki.org/sks/v0.61", className = "org.webpki.sks.ws.common.AsymmetricKeyDecryptResponse")
    public byte[] asymmetricKeyDecrypt(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        byte[] arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        byte[] arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        byte[] arg4)
        throws SKSException_Exception
    ;

    /**
     * 
     * @param keyHandle
     * @param newPIN
     * @param authorization
     * @throws SKSException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "changePIN", targetNamespace = "http://xmlns.webpki.org/sks/v0.61", className = "org.webpki.sks.ws.common.ChangePIN")
    @ResponseWrapper(localName = "changePINResponse", targetNamespace = "http://xmlns.webpki.org/sks/v0.61", className = "org.webpki.sks.ws.common.ChangePINResponse")
    public void changePIN(
        @WebParam(name = "KeyHandle", targetNamespace = "")
        int keyHandle,
        @WebParam(name = "Authorization", targetNamespace = "")
        byte[] authorization,
        @WebParam(name = "NewPIN", targetNamespace = "")
        byte[] newPIN)
        throws SKSException_Exception
    ;

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns byte[]
     * @throws SKSException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "closeProvisioningSession", targetNamespace = "http://xmlns.webpki.org/sks/v0.61", className = "org.webpki.sks.ws.common.CloseProvisioningSession")
    @ResponseWrapper(localName = "closeProvisioningSessionResponse", targetNamespace = "http://xmlns.webpki.org/sks/v0.61", className = "org.webpki.sks.ws.common.CloseProvisioningSessionResponse")
    public byte[] closeProvisioningSession(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        byte[] arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        byte[] arg2)
        throws SKSException_Exception
    ;

    /**
     * 
     * @param id
     * @param provisioningHandle
     * @return
     *     returns int
     * @throws SKSException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getKeyHandle", targetNamespace = "http://xmlns.webpki.org/sks/v0.61", className = "org.webpki.sks.ws.common.GetKeyHandle")
    @ResponseWrapper(localName = "getKeyHandleResponse", targetNamespace = "http://xmlns.webpki.org/sks/v0.61", className = "org.webpki.sks.ws.common.GetKeyHandleResponse")
    public int getKeyHandle(
        @WebParam(name = "ID", targetNamespace = "")
        String id,
        @WebParam(name = "ProvisioningHandle", targetNamespace = "")
        int provisioningHandle)
        throws SKSException_Exception
    ;

    /**
     * 
     * @param keyHandle
     * @param protectionStatus
     * @param blah
     * @throws SKSException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "getKeyProtectionInfo", targetNamespace = "http://xmlns.webpki.org/sks/v0.61", className = "org.webpki.sks.ws.common.GetKeyProtectionInfo")
    @ResponseWrapper(localName = "getKeyProtectionInfoResponse", targetNamespace = "http://xmlns.webpki.org/sks/v0.61", className = "org.webpki.sks.ws.common.GetKeyProtectionInfoResponse")
    public void getKeyProtectionInfo(
        @WebParam(name = "keyHandle", targetNamespace = "")
        int keyHandle,
        @WebParam(name = "protectionStatus", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> protectionStatus,
        @WebParam(name = "blah", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<Byte> blah)
        throws SKSException_Exception
    ;

    /**
     * 
     * @param keyHandle
     * @param x509Certificate
     * @param mac
     * @throws SKSException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "setCertificatePath", targetNamespace = "http://xmlns.webpki.org/sks/v0.61", className = "org.webpki.sks.ws.common.SetCertificatePath")
    @ResponseWrapper(localName = "setCertificatePathResponse", targetNamespace = "http://xmlns.webpki.org/sks/v0.61", className = "org.webpki.sks.ws.common.SetCertificatePathResponse")
    public void setCertificatePath(
        @WebParam(name = "keyHandle", targetNamespace = "")
        int keyHandle,
        @WebParam(name = "x509Certificate", targetNamespace = "")
        List<byte[]> x509Certificate,
        @WebParam(name = "mac", targetNamespace = "")
        byte[] mac)
        throws SKSException_Exception
    ;

}
