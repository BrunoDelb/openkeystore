/*
 *  Copyright 2006-2011 WebPKI.org (http://webpki.org).
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 */
namespace org.webpki.sks.ws.client
{

        ///////////////////////////////////////////////
        // Generated by WSCreator 1.0 - Do not edit! //
        ///////////////////////////////////////////////

    using System.Collections.Generic;

    using System.Security.Cryptography.X509Certificates;

    /*
     *  This is the .NET SKS WS client.
     */
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00")]
    public interface SKSWSProxyInterface
    {
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(SKSException), Action="", Name="SKSException")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        createProvisioningSession_Response createProvisioningSession(createProvisioningSession_Request request);

        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(SKSException), Action="", Name="SKSException")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        getDeviceInfo_Response getDeviceInfo(getDeviceInfo_Request request);

        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(SKSException), Action="", Name="SKSException")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        createPUKPolicy_Response createPUKPolicy(createPUKPolicy_Request request);

        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(SKSException), Action="", Name="SKSException")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        createPINPolicy_Response createPINPolicy(createPINPolicy_Request request);

        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(SKSException), Action="", Name="SKSException")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        createKeyEntry_Response createKeyEntry(createKeyEntry_Request request);

        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(SKSException), Action="", Name="SKSException")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        abortProvisioningSession_Response abortProvisioningSession(abortProvisioningSession_Request request);

        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(SKSException), Action="", Name="SKSException")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        signProvisioningSessionData_Response signProvisioningSessionData(signProvisioningSessionData_Request request);

        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(SKSException), Action="", Name="SKSException")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        getKeyHandle_Response getKeyHandle(getKeyHandle_Request request);

        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(SKSException), Action="", Name="SKSException")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        enumerateKeys_Response enumerateKeys(enumerateKeys_Request request);

        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(SKSException), Action="", Name="SKSException")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        enumerateProvisioningSessions_Response enumerateProvisioningSessions(enumerateProvisioningSessions_Request request);

        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(SKSException), Action="", Name="SKSException")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        getKeyProtectionInfo_Response getKeyProtectionInfo(getKeyProtectionInfo_Request request);

        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(SKSException), Action="", Name="SKSException")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        setCertificatePath_Response setCertificatePath(setCertificatePath_Request request);

        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(SKSException), Action="", Name="SKSException")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        restorePrivateKey_Response restorePrivateKey(restorePrivateKey_Request request);

        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(SKSException), Action="", Name="SKSException")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        setSymmetricKey_Response setSymmetricKey(setSymmetricKey_Request request);

        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(SKSException), Action="", Name="SKSException")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        addExtension_Response addExtension(addExtension_Request request);

        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(SKSException), Action="", Name="SKSException")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        pp_deleteKey_Response pp_deleteKey(pp_deleteKey_Request request);

        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(SKSException), Action="", Name="SKSException")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        pp_unlockKey_Response pp_unlockKey(pp_unlockKey_Request request);

        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(SKSException), Action="", Name="SKSException")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        pp_updateKey_Response pp_updateKey(pp_updateKey_Request request);

        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(SKSException), Action="", Name="SKSException")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        pp_cloneKeyProtection_Response pp_cloneKeyProtection(pp_cloneKeyProtection_Request request);

        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(SKSException), Action="", Name="SKSException")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        getKeyAttributes_Response getKeyAttributes(getKeyAttributes_Request request);

        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(SKSException), Action="", Name="SKSException")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        closeProvisioningSession_Response closeProvisioningSession(closeProvisioningSession_Request request);

        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        getVersion_Response getVersion(getVersion_Request request);

        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(SKSException), Action="", Name="SKSException")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        getCertPath_Response getCertPath(getCertPath_Request request);
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public class SKSException : System.Xml.Serialization.IXmlSerializable
    {
        private System.Xml.XmlNode[] nodes;

        public System.Xml.Schema.XmlSchema GetSchema()
        {
            return null;
        }

        public void ReadXml(System.Xml.XmlReader reader)
        {
            nodes = System.Runtime.Serialization.XmlSerializableServices.ReadNodes(reader);
        }

        public void WriteXml(System.Xml.XmlWriter writer)
        {
            System.Runtime.Serialization.XmlSerializableServices.WriteNodes(writer, nodes);
        }

        public int getError()
        {
            return System.Int32.Parse(nodes[0].InnerXml);
        }

        public string getMessage()
        {
            return nodes[1].InnerXml;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ServiceModel.MessageContractAttribute(WrapperName="createProvisioningSession", WrapperNamespace="http://xmlns.webpki.org/sks/v1.00", IsWrapped=true)]
    public class createProvisioningSession_Request
    {
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="Algorithm", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public string algorithm;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="ServerSessionID", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public string server_session_id;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="ServerEphemeralKey", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public byte[] server_ephemeral_key;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="IssuerURI", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public string issuer_uri;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="KeyManagementKey", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public byte[] key_management_key;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=5)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="ClientTime", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public int client_time;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=6)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="SessionLifeTime", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public int session_life_time;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=7)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="SessionKeyLimit", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public short session_key_limit;

        public createProvisioningSession_Request()
        {
        }

        public createProvisioningSession_Request(string algorithm,
                                                 string server_session_id,
                                                 byte[] server_ephemeral_key,
                                                 string issuer_uri,
                                                 byte[] key_management_key,
                                                 int client_time,
                                                 int session_life_time,
                                                 short session_key_limit)
        {
            this.algorithm = algorithm;
            this.server_session_id = server_session_id;
            this.server_ephemeral_key = server_ephemeral_key;
            this.issuer_uri = issuer_uri;
            this.key_management_key = key_management_key;
            this.client_time = client_time;
            this.session_life_time = session_life_time;
            this.session_key_limit = session_key_limit;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ServiceModel.MessageContractAttribute(WrapperName="createProvisioningSession.Response", WrapperNamespace="http://xmlns.webpki.org/sks/v1.00", IsWrapped=true)]
    public class createProvisioningSession_Response
    {
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="ProvisioningHandle", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public int @return;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="ClientSessionID", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public string client_session_id;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="ClientEphemeralKey", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public byte[] client_ephemeral_key;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="Attestation", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public byte[] attestation;

        public createProvisioningSession_Response()
        {
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getDeviceInfo", WrapperNamespace="http://xmlns.webpki.org/sks/v1.00", IsWrapped=true)]
    public class getDeviceInfo_Request
    {
        public getDeviceInfo_Request()
        {
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getDeviceInfo.Response", WrapperNamespace="http://xmlns.webpki.org/sks/v1.00", IsWrapped=true)]
    public class getDeviceInfo_Response
    {
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="APILevel", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public short api_level;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="UpdateURL", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public string update_url;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="VendorName", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public string vendor_name;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="VendorDescription", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public string vendor_description;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="X509Certificate", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public List<byte[]> certificate_path;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=5)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="SupportedAlgorithm", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public List<string> supported_algorithms;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=6)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="RSAExponentSupport", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public bool rsa_exponent_support;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=7)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="RSAKeySize", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public List<short> rsa_key_sizes;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=8)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="CryptoDataSize", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public int crypto_data_size;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=9)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="ExtensionDataSize", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public int extension_data_size;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=10)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="DevicePINSupport", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public bool device_pin_support;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=11)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="BiometricSupport", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public bool biometric_support;

        public getDeviceInfo_Response()
        {
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ServiceModel.MessageContractAttribute(WrapperName="createPUKPolicy", WrapperNamespace="http://xmlns.webpki.org/sks/v1.00", IsWrapped=true)]
    public class createPUKPolicy_Request
    {
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="ProvisioningHandle", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public int provisioning_handle;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="ID", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public string id;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="PUKValue", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public byte[] puk_value;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="Format", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public sbyte format;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="RetryLimit", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public short retry_limit;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=5)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="MAC", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public byte[] mac;

        public createPUKPolicy_Request()
        {
        }

        public createPUKPolicy_Request(int provisioning_handle,
                                       string id,
                                       byte[] puk_value,
                                       sbyte format,
                                       short retry_limit,
                                       byte[] mac)
        {
            this.provisioning_handle = provisioning_handle;
            this.id = id;
            this.puk_value = puk_value;
            this.format = format;
            this.retry_limit = retry_limit;
            this.mac = mac;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ServiceModel.MessageContractAttribute(WrapperName="createPUKPolicy.Response", WrapperNamespace="http://xmlns.webpki.org/sks/v1.00", IsWrapped=true)]
    public class createPUKPolicy_Response
    {
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="PUKPolicyHandle", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public int @return;

        public createPUKPolicy_Response()
        {
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ServiceModel.MessageContractAttribute(WrapperName="createPINPolicy", WrapperNamespace="http://xmlns.webpki.org/sks/v1.00", IsWrapped=true)]
    public class createPINPolicy_Request
    {
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="ProvisioningHandle", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public int provisioning_handle;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="ID", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public string id;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="PUKPolicyHandle", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public int puk_policy_handle;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="UserDefined", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public bool user_defined;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="UserModifiable", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public bool user_modifiable;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=5)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="Format", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public sbyte format;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=6)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="RetryLimit", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public short retry_limit;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=7)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="Grouping", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public sbyte grouping;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=8)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="PatternRestrictions", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public sbyte pattern_restrictions;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=9)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="MinLength", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public short min_length;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=10)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="MaxLength", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public short max_length;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=11)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="InputMethod", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public sbyte input_method;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=12)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="MAC", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public byte[] mac;

        public createPINPolicy_Request()
        {
        }

        public createPINPolicy_Request(int provisioning_handle,
                                       string id,
                                       int puk_policy_handle,
                                       bool user_defined,
                                       bool user_modifiable,
                                       sbyte format,
                                       short retry_limit,
                                       sbyte grouping,
                                       sbyte pattern_restrictions,
                                       short min_length,
                                       short max_length,
                                       sbyte input_method,
                                       byte[] mac)
        {
            this.provisioning_handle = provisioning_handle;
            this.id = id;
            this.puk_policy_handle = puk_policy_handle;
            this.user_defined = user_defined;
            this.user_modifiable = user_modifiable;
            this.format = format;
            this.retry_limit = retry_limit;
            this.grouping = grouping;
            this.pattern_restrictions = pattern_restrictions;
            this.min_length = min_length;
            this.max_length = max_length;
            this.input_method = input_method;
            this.mac = mac;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ServiceModel.MessageContractAttribute(WrapperName="createPINPolicy.Response", WrapperNamespace="http://xmlns.webpki.org/sks/v1.00", IsWrapped=true)]
    public class createPINPolicy_Response
    {
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="PINPolicyHandle", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public int @return;

        public createPINPolicy_Response()
        {
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ServiceModel.MessageContractAttribute(WrapperName="createKeyEntry", WrapperNamespace="http://xmlns.webpki.org/sks/v1.00", IsWrapped=true)]
    public class createKeyEntry_Request
    {
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="ProvisioningHandle", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public int provisioning_handle;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="ID", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public string id;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="Algorithm", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public string algorithm;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="ServerSeed", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public byte[] server_seed;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="DevicePINProtection", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public bool device_pin_protection;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=5)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="PINPolicyHandle", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public int pin_policy_handle;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=6)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="PINValue", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public byte[] pin_value;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=7)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="EnablePINCaching", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public bool enable_pin_caching;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=8)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="BiometricProtection", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public sbyte biometric_protection;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=9)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="ExportProtection", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public sbyte export_protection;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=10)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="DeleteProtection", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public sbyte delete_protection;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=11)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="AppUsage", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public sbyte app_usage;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=12)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="FriendlyName", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public string friendly_name;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=13)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="PrivateKeyBackup", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public bool private_key_backup;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=14)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="KeySpecifier", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public byte[] key_specifier;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=15)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="EndorsedAlgorithm", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public List<string> endorsed_algorithms;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=16)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="MAC", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public byte[] mac;

        public createKeyEntry_Request()
        {
        }

        public createKeyEntry_Request(int provisioning_handle,
                                      string id,
                                      string algorithm,
                                      byte[] server_seed,
                                      bool device_pin_protection,
                                      int pin_policy_handle,
                                      byte[] pin_value,
                                      bool enable_pin_caching,
                                      sbyte biometric_protection,
                                      sbyte export_protection,
                                      sbyte delete_protection,
                                      sbyte app_usage,
                                      string friendly_name,
                                      bool private_key_backup,
                                      byte[] key_specifier,
                                      List<string> endorsed_algorithms,
                                      byte[] mac)
        {
            this.provisioning_handle = provisioning_handle;
            this.id = id;
            this.algorithm = algorithm;
            this.server_seed = server_seed;
            this.device_pin_protection = device_pin_protection;
            this.pin_policy_handle = pin_policy_handle;
            this.pin_value = pin_value;
            this.enable_pin_caching = enable_pin_caching;
            this.biometric_protection = biometric_protection;
            this.export_protection = export_protection;
            this.delete_protection = delete_protection;
            this.app_usage = app_usage;
            this.friendly_name = friendly_name;
            this.private_key_backup = private_key_backup;
            this.key_specifier = key_specifier;
            this.endorsed_algorithms = endorsed_algorithms;
            this.mac = mac;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ServiceModel.MessageContractAttribute(WrapperName="createKeyEntry.Response", WrapperNamespace="http://xmlns.webpki.org/sks/v1.00", IsWrapped=true)]
    public class createKeyEntry_Response
    {
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="KeyHandle", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public int @return;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="PublicKey", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public byte[] public_key;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="Attestation", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public byte[] attestation;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="PrivateKey", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public byte[] private_key;

        public createKeyEntry_Response()
        {
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ServiceModel.MessageContractAttribute(WrapperName="abortProvisioningSession", WrapperNamespace="http://xmlns.webpki.org/sks/v1.00", IsWrapped=true)]
    public class abortProvisioningSession_Request
    {
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="ProvisioningHandle", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public int provisioning_handle;

        public abortProvisioningSession_Request()
        {
        }

        public abortProvisioningSession_Request(int provisioning_handle)
        {
            this.provisioning_handle = provisioning_handle;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ServiceModel.MessageContractAttribute(WrapperName="abortProvisioningSession.Response", WrapperNamespace="http://xmlns.webpki.org/sks/v1.00", IsWrapped=true)]
    public class abortProvisioningSession_Response
    {
        public abortProvisioningSession_Response()
        {
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ServiceModel.MessageContractAttribute(WrapperName="signProvisioningSessionData", WrapperNamespace="http://xmlns.webpki.org/sks/v1.00", IsWrapped=true)]
    public class signProvisioningSessionData_Request
    {
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="ProvisioningHandle", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public int provisioning_handle;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="Data", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public byte[] data;

        public signProvisioningSessionData_Request()
        {
        }

        public signProvisioningSessionData_Request(int provisioning_handle,
                                                   byte[] data)
        {
            this.provisioning_handle = provisioning_handle;
            this.data = data;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ServiceModel.MessageContractAttribute(WrapperName="signProvisioningSessionData.Response", WrapperNamespace="http://xmlns.webpki.org/sks/v1.00", IsWrapped=true)]
    public class signProvisioningSessionData_Response
    {
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="Result", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public byte[] @return;

        public signProvisioningSessionData_Response()
        {
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getKeyHandle", WrapperNamespace="http://xmlns.webpki.org/sks/v1.00", IsWrapped=true)]
    public class getKeyHandle_Request
    {
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="ProvisioningHandle", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public int provisioning_handle;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="ID", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public string id;

        public getKeyHandle_Request()
        {
        }

        public getKeyHandle_Request(int provisioning_handle,
                                    string id)
        {
            this.provisioning_handle = provisioning_handle;
            this.id = id;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getKeyHandle.Response", WrapperNamespace="http://xmlns.webpki.org/sks/v1.00", IsWrapped=true)]
    public class getKeyHandle_Response
    {
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="KeyHandle", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public int @return;

        public getKeyHandle_Response()
        {
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ServiceModel.MessageContractAttribute(WrapperName="enumerateKeys", WrapperNamespace="http://xmlns.webpki.org/sks/v1.00", IsWrapped=true)]
    public class enumerateKeys_Request
    {
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="KeyHandle", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public int key_handle;

        public enumerateKeys_Request()
        {
        }

        public enumerateKeys_Request(int key_handle)
        {
            this.key_handle = key_handle;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ServiceModel.MessageContractAttribute(WrapperName="enumerateKeys.Response", WrapperNamespace="http://xmlns.webpki.org/sks/v1.00", IsWrapped=true)]
    public class enumerateKeys_Response
    {
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="KeyHandle", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public int @return;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="ProvisioningHandle", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public int provisioning_handle;

        public enumerateKeys_Response()
        {
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ServiceModel.MessageContractAttribute(WrapperName="enumerateProvisioningSessions", WrapperNamespace="http://xmlns.webpki.org/sks/v1.00", IsWrapped=true)]
    public class enumerateProvisioningSessions_Request
    {
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="ProvisioningHandle", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public int provisioning_handle;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="ProvisioningState", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public bool provisioning_state;

        public enumerateProvisioningSessions_Request()
        {
        }

        public enumerateProvisioningSessions_Request(int provisioning_handle,
                                                     bool provisioning_state)
        {
            this.provisioning_handle = provisioning_handle;
            this.provisioning_state = provisioning_state;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ServiceModel.MessageContractAttribute(WrapperName="enumerateProvisioningSessions.Response", WrapperNamespace="http://xmlns.webpki.org/sks/v1.00", IsWrapped=true)]
    public class enumerateProvisioningSessions_Response
    {
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="ProvisioningHandle", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public int @return;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="KeyManagementKey", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public byte[] key_management_key;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="ClientTime", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public int client_time;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="SessionLifeTime", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public int session_life_time;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="ServerSessionID", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public string server_session_id;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=5)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="ClientSessionID", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public string client_session_id;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=6)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="IssuerURI", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public string issuer_uri;

        public enumerateProvisioningSessions_Response()
        {
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getKeyProtectionInfo", WrapperNamespace="http://xmlns.webpki.org/sks/v1.00", IsWrapped=true)]
    public class getKeyProtectionInfo_Request
    {
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="keyHandle", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public int key_handle;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="ProtectionStatus", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public string protection_status;

        public getKeyProtectionInfo_Request()
        {
        }

        public getKeyProtectionInfo_Request(int key_handle,
                                            ref string protection_status)
        {
            this.key_handle = key_handle;
            this.protection_status = protection_status;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getKeyProtectionInfo.Response", WrapperNamespace="http://xmlns.webpki.org/sks/v1.00", IsWrapped=true)]
    public class getKeyProtectionInfo_Response
    {
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="return", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public int @return;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="ProtectionStatus", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public string protection_status;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="blah", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public sbyte blah;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="X509Certificate", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public List<byte[]> certificate_path;

        public getKeyProtectionInfo_Response()
        {
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ServiceModel.MessageContractAttribute(WrapperName="setCertificatePath", WrapperNamespace="http://xmlns.webpki.org/sks/v1.00", IsWrapped=true)]
    public class setCertificatePath_Request
    {
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="KeyHandle", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public int key_handle;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="X509Certificate", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public List<byte[]> certificate_path;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="MAC", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public byte[] mac;

        public setCertificatePath_Request()
        {
        }

        public setCertificatePath_Request(int key_handle,
                                          List<byte[]> certificate_path,
                                          byte[] mac)
        {
            this.key_handle = key_handle;
            this.certificate_path = certificate_path;
            this.mac = mac;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ServiceModel.MessageContractAttribute(WrapperName="setCertificatePath.Response", WrapperNamespace="http://xmlns.webpki.org/sks/v1.00", IsWrapped=true)]
    public class setCertificatePath_Response
    {
        public setCertificatePath_Response()
        {
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ServiceModel.MessageContractAttribute(WrapperName="restorePrivateKey", WrapperNamespace="http://xmlns.webpki.org/sks/v1.00", IsWrapped=true)]
    public class restorePrivateKey_Request
    {
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="KeyHandle", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public int key_handle;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="PrivateKey", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public byte[] private_key;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="MAC", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public byte[] mac;

        public restorePrivateKey_Request()
        {
        }

        public restorePrivateKey_Request(int key_handle,
                                         byte[] private_key,
                                         byte[] mac)
        {
            this.key_handle = key_handle;
            this.private_key = private_key;
            this.mac = mac;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ServiceModel.MessageContractAttribute(WrapperName="restorePrivateKey.Response", WrapperNamespace="http://xmlns.webpki.org/sks/v1.00", IsWrapped=true)]
    public class restorePrivateKey_Response
    {
        public restorePrivateKey_Response()
        {
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ServiceModel.MessageContractAttribute(WrapperName="setSymmetricKey", WrapperNamespace="http://xmlns.webpki.org/sks/v1.00", IsWrapped=true)]
    public class setSymmetricKey_Request
    {
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="KeyHandle", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public int key_handle;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="SymmetricKey", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public byte[] symmetric_key;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="MAC", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public byte[] mac;

        public setSymmetricKey_Request()
        {
        }

        public setSymmetricKey_Request(int key_handle,
                                       byte[] symmetric_key,
                                       byte[] mac)
        {
            this.key_handle = key_handle;
            this.symmetric_key = symmetric_key;
            this.mac = mac;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ServiceModel.MessageContractAttribute(WrapperName="setSymmetricKey.Response", WrapperNamespace="http://xmlns.webpki.org/sks/v1.00", IsWrapped=true)]
    public class setSymmetricKey_Response
    {
        public setSymmetricKey_Response()
        {
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ServiceModel.MessageContractAttribute(WrapperName="addExtension", WrapperNamespace="http://xmlns.webpki.org/sks/v1.00", IsWrapped=true)]
    public class addExtension_Request
    {
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="KeyHandle", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public int key_handle;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="Type", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public string type;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="SubType", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public sbyte sub_type;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="Qualifier", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public byte[] qualifier;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="ExtensionData", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public byte[] extension_data;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=5)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="MAC", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public byte[] mac;

        public addExtension_Request()
        {
        }

        public addExtension_Request(int key_handle,
                                    string type,
                                    sbyte sub_type,
                                    byte[] qualifier,
                                    byte[] extension_data,
                                    byte[] mac)
        {
            this.key_handle = key_handle;
            this.type = type;
            this.sub_type = sub_type;
            this.qualifier = qualifier;
            this.extension_data = extension_data;
            this.mac = mac;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ServiceModel.MessageContractAttribute(WrapperName="addExtension.Response", WrapperNamespace="http://xmlns.webpki.org/sks/v1.00", IsWrapped=true)]
    public class addExtension_Response
    {
        public addExtension_Response()
        {
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ServiceModel.MessageContractAttribute(WrapperName="pp_deleteKey", WrapperNamespace="http://xmlns.webpki.org/sks/v1.00", IsWrapped=true)]
    public class pp_deleteKey_Request
    {
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="ProvisioningHandle", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public int provisioning_handle;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="TargetKeyHandle", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public int target_key_handle;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="Authorization", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public byte[] authorization;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="MAC", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public byte[] mac;

        public pp_deleteKey_Request()
        {
        }

        public pp_deleteKey_Request(int provisioning_handle,
                                    int target_key_handle,
                                    byte[] authorization,
                                    byte[] mac)
        {
            this.provisioning_handle = provisioning_handle;
            this.target_key_handle = target_key_handle;
            this.authorization = authorization;
            this.mac = mac;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ServiceModel.MessageContractAttribute(WrapperName="pp_deleteKey.Response", WrapperNamespace="http://xmlns.webpki.org/sks/v1.00", IsWrapped=true)]
    public class pp_deleteKey_Response
    {
        public pp_deleteKey_Response()
        {
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ServiceModel.MessageContractAttribute(WrapperName="pp_unlockKey", WrapperNamespace="http://xmlns.webpki.org/sks/v1.00", IsWrapped=true)]
    public class pp_unlockKey_Request
    {
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="ProvisioningHandle", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public int provisioning_handle;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="TargetKeyHandle", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public int target_key_handle;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="Authorization", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public byte[] authorization;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="MAC", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public byte[] mac;

        public pp_unlockKey_Request()
        {
        }

        public pp_unlockKey_Request(int provisioning_handle,
                                    int target_key_handle,
                                    byte[] authorization,
                                    byte[] mac)
        {
            this.provisioning_handle = provisioning_handle;
            this.target_key_handle = target_key_handle;
            this.authorization = authorization;
            this.mac = mac;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ServiceModel.MessageContractAttribute(WrapperName="pp_unlockKey.Response", WrapperNamespace="http://xmlns.webpki.org/sks/v1.00", IsWrapped=true)]
    public class pp_unlockKey_Response
    {
        public pp_unlockKey_Response()
        {
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ServiceModel.MessageContractAttribute(WrapperName="pp_updateKey", WrapperNamespace="http://xmlns.webpki.org/sks/v1.00", IsWrapped=true)]
    public class pp_updateKey_Request
    {
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="KeyHandle", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public int key_handle;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="TargetKeyHandle", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public int target_key_handle;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="Authorization", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public byte[] authorization;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="MAC", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public byte[] mac;

        public pp_updateKey_Request()
        {
        }

        public pp_updateKey_Request(int key_handle,
                                    int target_key_handle,
                                    byte[] authorization,
                                    byte[] mac)
        {
            this.key_handle = key_handle;
            this.target_key_handle = target_key_handle;
            this.authorization = authorization;
            this.mac = mac;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ServiceModel.MessageContractAttribute(WrapperName="pp_updateKey.Response", WrapperNamespace="http://xmlns.webpki.org/sks/v1.00", IsWrapped=true)]
    public class pp_updateKey_Response
    {
        public pp_updateKey_Response()
        {
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ServiceModel.MessageContractAttribute(WrapperName="pp_cloneKeyProtection", WrapperNamespace="http://xmlns.webpki.org/sks/v1.00", IsWrapped=true)]
    public class pp_cloneKeyProtection_Request
    {
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="KeyHandle", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public int key_handle;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="TargetKeyHandle", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public int target_key_handle;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="Authorization", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public byte[] authorization;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="MAC", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public byte[] mac;

        public pp_cloneKeyProtection_Request()
        {
        }

        public pp_cloneKeyProtection_Request(int key_handle,
                                             int target_key_handle,
                                             byte[] authorization,
                                             byte[] mac)
        {
            this.key_handle = key_handle;
            this.target_key_handle = target_key_handle;
            this.authorization = authorization;
            this.mac = mac;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ServiceModel.MessageContractAttribute(WrapperName="pp_cloneKeyProtection.Response", WrapperNamespace="http://xmlns.webpki.org/sks/v1.00", IsWrapped=true)]
    public class pp_cloneKeyProtection_Response
    {
        public pp_cloneKeyProtection_Response()
        {
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getKeyAttributes", WrapperNamespace="http://xmlns.webpki.org/sks/v1.00", IsWrapped=true)]
    public class getKeyAttributes_Request
    {
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="KeyHandle", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public int key_handle;

        public getKeyAttributes_Request()
        {
        }

        public getKeyAttributes_Request(int key_handle)
        {
            this.key_handle = key_handle;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getKeyAttributes.Response", WrapperNamespace="http://xmlns.webpki.org/sks/v1.00", IsWrapped=true)]
    public class getKeyAttributes_Response
    {
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="IsSymmetricKey", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public bool is_symmetric_key;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="AppUsage", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public sbyte app_usage;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="FriendlyName", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public string friendly_name;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="X509Certificate", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public List<byte[]> certificate_path;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="EndorsedAlgorithm", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public List<string> endorsed_algorithms;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=5)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="ExtensionType", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public List<string> extension_types;

        public getKeyAttributes_Response()
        {
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ServiceModel.MessageContractAttribute(WrapperName="closeProvisioningSession", WrapperNamespace="http://xmlns.webpki.org/sks/v1.00", IsWrapped=true)]
    public class closeProvisioningSession_Request
    {
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="ProvisioningHandle", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public int provisioning_handle;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="Nonce", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public byte[] nonce;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="MAC", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public byte[] mac;

        public closeProvisioningSession_Request()
        {
        }

        public closeProvisioningSession_Request(int provisioning_handle,
                                                byte[] nonce,
                                                byte[] mac)
        {
            this.provisioning_handle = provisioning_handle;
            this.nonce = nonce;
            this.mac = mac;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ServiceModel.MessageContractAttribute(WrapperName="closeProvisioningSession.Response", WrapperNamespace="http://xmlns.webpki.org/sks/v1.00", IsWrapped=true)]
    public class closeProvisioningSession_Response
    {
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="Attestation", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public byte[] @return;

        public closeProvisioningSession_Response()
        {
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getVersion", WrapperNamespace="http://xmlns.webpki.org/sks/v1.00", IsWrapped=true)]
    public class getVersion_Request
    {
        public getVersion_Request()
        {
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getVersion.Response", WrapperNamespace="http://xmlns.webpki.org/sks/v1.00", IsWrapped=true)]
    public class getVersion_Response
    {
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="return", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public string @return;

        public getVersion_Response()
        {
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getCertPath", WrapperNamespace="http://xmlns.webpki.org/sks/v1.00", IsWrapped=true)]
    public class getCertPath_Request
    {
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="want", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public bool want;

        public getCertPath_Request()
        {
        }

        public getCertPath_Request(bool want)
        {
            this.want = want;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getCertPath.Response", WrapperNamespace="http://xmlns.webpki.org/sks/v1.00", IsWrapped=true)]
    public class getCertPath_Response
    {
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.webpki.org/sks/v1.00", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(ElementName="X509Certificate", Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public List<byte[]> @return;

        public getCertPath_Response()
        {
        }
    }

    public class SKSWSProxy : System.ServiceModel.ClientBase<SKSWSProxyInterface>
    {
        public static string ALGORITHM_SESSION_KEY_ATTEST_1 = "http://xmlns.webpki.org/keygen2/1.0#algorithm.sks.s1";

        public static string ALGORITHM_KEY_ATTEST_1         = "http://xmlns.webpki.org/keygen2/1.0#algorithm.sks.k1";

        X509Certificate2[] blist2certs (List<byte[]> blist)
        {
            X509Certificate2[] certs = new X509Certificate2[blist.Count];
            int i = 0;
            foreach (byte[] b_arr in blist)
            {
                certs[i++] = new X509Certificate2(b_arr);
            }
            return i == 0 ? null : certs;
        }

        List<byte[]> certs2blist (X509Certificate2[] certs)
        {
            List<byte[]> blist = new List<byte[]>();
            if (certs != null) foreach (X509Certificate2 cert in certs)
            {
                blist.Add (cert.RawData);
            }
            return blist;
        }

        public static SKSWSProxy getDefaultSKSWSProxy()
        {
            Microsoft.Win32.RegistryKey reg_entry = Microsoft.Win32.RegistryKey.OpenBaseKey(Microsoft.Win32.RegistryHive.LocalMachine,
                                                                        System.Environment.Is64BitOperatingSystem ?
                                                                          Microsoft.Win32.RegistryView.Registry64 : Microsoft.Win32.RegistryView.Registry32)
                .OpenSubKey(@"SOFTWARE\WebPKI.org");
            string ws_url = reg_entry == null ? null : (string) reg_entry.GetValue ("SKSWSURL");
            if (ws_url == null)
            {
                 throw new System.ArgumentException(@"No such registry entry: SOFTWARE\WebPKI.org\SKSWSURL");
            }
            System.ServiceModel.BasicHttpBinding ws_bind = new System.ServiceModel.BasicHttpBinding();
            ws_bind.SendTimeout = System.TimeSpan.FromMinutes(5);
            return new SKSWSProxy(ws_bind, new System.ServiceModel.EndpointAddress(ws_url));
        }

        public SKSWSProxy(string endpointConfigurationName) : base(endpointConfigurationName)
        {
        }

        public SKSWSProxy(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : base(binding, remoteAddress)
        {
        }

        public int createProvisioningSession(string algorithm,
                                             string server_session_id,
                                             byte[] server_ephemeral_key,
                                             string issuer_uri,
                                             byte[] key_management_key,
                                             int client_time,
                                             int session_life_time,
                                             short session_key_limit,
                                             out string client_session_id,
                                             out byte[] client_ephemeral_key,
                                             out byte[] attestation)
        {
            createProvisioningSession_Response _res = base.Channel.createProvisioningSession(new createProvisioningSession_Request(algorithm,
                                                                                                                                   server_session_id,
                                                                                                                                   server_ephemeral_key,
                                                                                                                                   issuer_uri,
                                                                                                                                   key_management_key,
                                                                                                                                   client_time,
                                                                                                                                   session_life_time,
                                                                                                                                   session_key_limit));
            client_session_id = _res.client_session_id;
            client_ephemeral_key = _res.client_ephemeral_key;
            attestation = _res.attestation;
            return _res.@return;
        }

        public void getDeviceInfo(out short api_level,
                                  out string update_url,
                                  out string vendor_name,
                                  out string vendor_description,
                                  out List<byte[]> certificate_path,
                                  out List<string> supported_algorithms,
                                  out bool rsa_exponent_support,
                                  out List<short> rsa_key_sizes,
                                  out int crypto_data_size,
                                  out int extension_data_size,
                                  out bool device_pin_support,
                                  out bool biometric_support)
        {
            getDeviceInfo_Response _res = base.Channel.getDeviceInfo(new getDeviceInfo_Request());
            api_level = _res.api_level;
            update_url = _res.update_url;
            vendor_name = _res.vendor_name;
            vendor_description = _res.vendor_description;
            certificate_path = _res.certificate_path;
            supported_algorithms = _res.supported_algorithms;
            rsa_exponent_support = _res.rsa_exponent_support;
            rsa_key_sizes = _res.rsa_key_sizes;
            crypto_data_size = _res.crypto_data_size;
            extension_data_size = _res.extension_data_size;
            device_pin_support = _res.device_pin_support;
            biometric_support = _res.biometric_support;
        }

        public int createPUKPolicy(int provisioning_handle,
                                   string id,
                                   byte[] puk_value,
                                   sbyte format,
                                   short retry_limit,
                                   byte[] mac)
        {
            createPUKPolicy_Response _res = base.Channel.createPUKPolicy(new createPUKPolicy_Request(provisioning_handle,
                                                                                                     id,
                                                                                                     puk_value,
                                                                                                     format,
                                                                                                     retry_limit,
                                                                                                     mac));
            return _res.@return;
        }

        public int createPINPolicy(int provisioning_handle,
                                   string id,
                                   int puk_policy_handle,
                                   bool user_defined,
                                   bool user_modifiable,
                                   sbyte format,
                                   short retry_limit,
                                   sbyte grouping,
                                   sbyte pattern_restrictions,
                                   short min_length,
                                   short max_length,
                                   sbyte input_method,
                                   byte[] mac)
        {
            createPINPolicy_Response _res = base.Channel.createPINPolicy(new createPINPolicy_Request(provisioning_handle,
                                                                                                     id,
                                                                                                     puk_policy_handle,
                                                                                                     user_defined,
                                                                                                     user_modifiable,
                                                                                                     format,
                                                                                                     retry_limit,
                                                                                                     grouping,
                                                                                                     pattern_restrictions,
                                                                                                     min_length,
                                                                                                     max_length,
                                                                                                     input_method,
                                                                                                     mac));
            return _res.@return;
        }

        public int createKeyEntry(int provisioning_handle,
                                  string id,
                                  string algorithm,
                                  byte[] server_seed,
                                  bool device_pin_protection,
                                  int pin_policy_handle,
                                  byte[] pin_value,
                                  bool enable_pin_caching,
                                  sbyte biometric_protection,
                                  sbyte export_protection,
                                  sbyte delete_protection,
                                  sbyte app_usage,
                                  string friendly_name,
                                  bool private_key_backup,
                                  byte[] key_specifier,
                                  List<string> endorsed_algorithms,
                                  byte[] mac,
                                  out byte[] public_key,
                                  out byte[] attestation,
                                  out byte[] private_key)
        {
            createKeyEntry_Response _res = base.Channel.createKeyEntry(new createKeyEntry_Request(provisioning_handle,
                                                                                                  id,
                                                                                                  algorithm,
                                                                                                  server_seed,
                                                                                                  device_pin_protection,
                                                                                                  pin_policy_handle,
                                                                                                  pin_value,
                                                                                                  enable_pin_caching,
                                                                                                  biometric_protection,
                                                                                                  export_protection,
                                                                                                  delete_protection,
                                                                                                  app_usage,
                                                                                                  friendly_name,
                                                                                                  private_key_backup,
                                                                                                  key_specifier,
                                                                                                  endorsed_algorithms,
                                                                                                  mac));
            public_key = _res.public_key;
            attestation = _res.attestation;
            private_key = _res.private_key;
            return _res.@return;
        }

        public void abortProvisioningSession(int provisioning_handle)
        {
            base.Channel.abortProvisioningSession(new abortProvisioningSession_Request(provisioning_handle));
        }

        public byte[] signProvisioningSessionData(int provisioning_handle,
                                                  byte[] data)
        {
            signProvisioningSessionData_Response _res = base.Channel.signProvisioningSessionData(new signProvisioningSessionData_Request(provisioning_handle,
                                                                                                                                         data));
            return _res.@return;
        }

        public int getKeyHandle(int provisioning_handle,
                                string id)
        {
            getKeyHandle_Response _res = base.Channel.getKeyHandle(new getKeyHandle_Request(provisioning_handle,
                                                                                            id));
            return _res.@return;
        }

        public int enumerateKeys(int key_handle,
                                 out int provisioning_handle)
        {
            enumerateKeys_Response _res = base.Channel.enumerateKeys(new enumerateKeys_Request(key_handle));
            provisioning_handle = _res.provisioning_handle;
            return _res.@return;
        }

        public int enumerateProvisioningSessions(int provisioning_handle,
                                                 bool provisioning_state,
                                                 out byte[] key_management_key,
                                                 out int client_time,
                                                 out int session_life_time,
                                                 out string server_session_id,
                                                 out string client_session_id,
                                                 out string issuer_uri)
        {
            enumerateProvisioningSessions_Response _res = base.Channel.enumerateProvisioningSessions(new enumerateProvisioningSessions_Request(provisioning_handle,
                                                                                                                                               provisioning_state));
            key_management_key = _res.key_management_key;
            client_time = _res.client_time;
            session_life_time = _res.session_life_time;
            server_session_id = _res.server_session_id;
            client_session_id = _res.client_session_id;
            issuer_uri = _res.issuer_uri;
            return _res.@return;
        }

        public int getKeyProtectionInfo(int key_handle,
                                        ref string protection_status,
                                        out sbyte blah,
                                        out X509Certificate2[] certificate_path)
        {
            getKeyProtectionInfo_Response _res = base.Channel.getKeyProtectionInfo(new getKeyProtectionInfo_Request(key_handle,
                                                                                                                    ref protection_status));
            protection_status = _res.protection_status;
            blah = _res.blah;
            certificate_path = blist2certs(_res.certificate_path);
            return _res.@return;
        }

        public void setCertificatePath(int key_handle,
                                       X509Certificate2[] certificate_path,
                                       byte[] mac)
        {
            base.Channel.setCertificatePath(new setCertificatePath_Request(key_handle,
                                                                           certs2blist(certificate_path),
                                                                           mac));
        }

        public void restorePrivateKey(int key_handle,
                                      byte[] private_key,
                                      byte[] mac)
        {
            base.Channel.restorePrivateKey(new restorePrivateKey_Request(key_handle,
                                                                         private_key,
                                                                         mac));
        }

        public void setSymmetricKey(int key_handle,
                                    byte[] symmetric_key,
                                    byte[] mac)
        {
            base.Channel.setSymmetricKey(new setSymmetricKey_Request(key_handle,
                                                                     symmetric_key,
                                                                     mac));
        }

        public void addExtension(int key_handle,
                                 string type,
                                 sbyte sub_type,
                                 byte[] qualifier,
                                 byte[] extension_data,
                                 byte[] mac)
        {
            base.Channel.addExtension(new addExtension_Request(key_handle,
                                                               type,
                                                               sub_type,
                                                               qualifier,
                                                               extension_data,
                                                               mac));
        }

        public void pp_deleteKey(int provisioning_handle,
                                 int target_key_handle,
                                 byte[] authorization,
                                 byte[] mac)
        {
            base.Channel.pp_deleteKey(new pp_deleteKey_Request(provisioning_handle,
                                                               target_key_handle,
                                                               authorization,
                                                               mac));
        }

        public void pp_unlockKey(int provisioning_handle,
                                 int target_key_handle,
                                 byte[] authorization,
                                 byte[] mac)
        {
            base.Channel.pp_unlockKey(new pp_unlockKey_Request(provisioning_handle,
                                                               target_key_handle,
                                                               authorization,
                                                               mac));
        }

        public void pp_updateKey(int key_handle,
                                 int target_key_handle,
                                 byte[] authorization,
                                 byte[] mac)
        {
            base.Channel.pp_updateKey(new pp_updateKey_Request(key_handle,
                                                               target_key_handle,
                                                               authorization,
                                                               mac));
        }

        public void pp_cloneKeyProtection(int key_handle,
                                          int target_key_handle,
                                          byte[] authorization,
                                          byte[] mac)
        {
            base.Channel.pp_cloneKeyProtection(new pp_cloneKeyProtection_Request(key_handle,
                                                                                 target_key_handle,
                                                                                 authorization,
                                                                                 mac));
        }

        public void getKeyAttributes(int key_handle,
                                     out bool is_symmetric_key,
                                     out sbyte app_usage,
                                     out string friendly_name,
                                     out List<byte[]> certificate_path,
                                     out List<string> endorsed_algorithms,
                                     out List<string> extension_types)
        {
            getKeyAttributes_Response _res = base.Channel.getKeyAttributes(new getKeyAttributes_Request(key_handle));
            is_symmetric_key = _res.is_symmetric_key;
            app_usage = _res.app_usage;
            friendly_name = _res.friendly_name;
            certificate_path = _res.certificate_path;
            endorsed_algorithms = _res.endorsed_algorithms;
            extension_types = _res.extension_types;
        }

        public byte[] closeProvisioningSession(int provisioning_handle,
                                               byte[] nonce,
                                               byte[] mac)
        {
            closeProvisioningSession_Response _res = base.Channel.closeProvisioningSession(new closeProvisioningSession_Request(provisioning_handle,
                                                                                                                                nonce,
                                                                                                                                mac));
            return _res.@return;
        }

        public string getVersion()
        {
            getVersion_Response _res = base.Channel.getVersion(new getVersion_Request());
            return _res.@return;
        }

        public X509Certificate2[] getCertPath(bool want)
        {
            getCertPath_Response _res = base.Channel.getCertPath(new getCertPath_Request(want));
            return blist2certs(_res.@return);
        }
    }
}
